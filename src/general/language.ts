
let currentLang: LangCode = 'en';

export type LangCode = keyof typeof translations;

export let translations = {
  en: {
    Graphical: 'Graphical',
    Both: 'Both', 
    Text: 'Text',
    chooseEditor: 'Choose editor:',

    settings: 'Settings',
    usersFactors: 'Users factors',
    importJSONfile: 'Import JSON file',
    exportJSONfile: 'Export JSON file',
    chooseLanguage: 'üåêChoose language:',
    procedures: 'Procedures', 
    variables: 'Variables',
    conditions: 'Conditions',
    devicesFactors: 'Devices factors',
    commands: '‚ö°Commands',
    parameters: 'üå°Ô∏èParameters',
    about: 'About',
    help: '? Help',


    save: 'Save',
    back: 'Back',
    cancel: 'Cancel',
    edit: 'Edit',
    delete: 'Delete',

    listOfVariables: 'List of variables',
    type: 'Type',
    name: 'Name',
    value: 'Value',
    newVariable: 'New variable',

    number: 'üî¢ number',
    text: 'üî§ text', 
    bool: '‚úÖ bool',
    expr: 'üßÆ expr',
    true: 'true',
    false: 'false',
    enterNumber: 'Enter number',
    addVarVal: 'Variable value...',
    selectTypeOfVar: 'Type of variable: ',
    addVarName: 'Variable name...',

    listOfConditions: 'List of conditions',
    newCondition: 'New condition',
    conditionEditor: '‚öñÔ∏èCondition Editor',
    fillNameOfNewCondition: 'Name of condition:',
    addName: 'Conditionn name ...',
    addFirstVar: 'Add first variable or value',// to your condition
    select: 'Select...',
    saveCondition: 'Save condition',
    group: 'Group',
    useValue: 'Use value',
    selectFromExist: 'Choose from existing',

    User: 'User',
    Device: 'Device',
    addVariable: 'Add variable',
    addValue: 'Add value',

    Compare: 'Compare',
    Logical: 'Logical',
    Numeric: 'Numeric',
    insertBlock: 'Insert next program block',//block of your program
    insertFirstBlock: 'Insert first program block',//of your program
    insertHere: 'Insert here',
    attentionIf: 'Attention: All (otherwise) and (else) blocks connected with this (if) block will be moved too. ',
    attentionIfDelete: 'Attention: All (else if) and (else) blocks connected with this (if) block will be deleted too. ',
    invalidAction: 'Invalid drag and drop. ',//action
    attentionVar: 'Attention: If you delete used variable, it makes error in your program. ',
    invalidName: 'Name already used. ',
    invalidImport: 'File not accepted: mistake in imported JSON. ',//Import program cannot be used. There is some mistake in imported JSON. 
    
    do: 'Do', 
    Repeat: 'Repeat',
    While: 'While',
    SendNotification: 'Send Notification',
    If: 'If',
    Else: 'Else',
    Otherwise: 'Otherwise',
    SwitchAccording: 'Switch According',
    Case: 'Case',
    EndOfBlock: 'End of Block',
    SetVariable: 'Set Variable',

    showBlock: 'Show block contend',
    hideBlock: 'Hide block contend',
    addArgument: 'Add argument: ',
    cond: 'cond. ',
    hide: 'Hide',
    arguments: 'Arguments ...',
    replace: 'Replace',
    saveAsProcedure: 'Save as procedure',
    changeValue: 'Change value: ',
    useVariable: 'Use variable: ',
    addVal: 'Add value',

    branch: 'branch',
    all: 'all',
    dev: 'dev',
    others: 'others',
    cycle: 'cycle',
    clickCreate: 'Create new expression',

    KPI: 'üìä KPI',
    leaking: 'Leaking',
    turnedOn: 'Turned on',
    deviceOnline: 'Devices online',
    criticalBatery: 'Critical battery',
    anomalyDetected: 'Anomaly detected',
    sensorError: 'Sensor error',

    aboutText: 'This is VPL editor for automatization of smart devices on mobile phones. It was developed for project Pocketix by David ≈†krabal. This editor uses a block and form based visual programming language. For more information click ',
    here: 'here',
    helpText: 'The editor consists of three main parts: the menu, the program editor, and the offer section. The editor has two views: graphical and text. The view can be switched using the view button located in the menu.',
    graphicalView: 'Graphical view',
    graphicalViewText: 'The graphical view displays individual program blocks. Blocks can be moved using the drag-and-drop button located on the left side of each block. On desktop devices, it is necessary to click this button to reveal drop zones before dragging. Holding a block opens an action menu for that block. This menu includes options to delete, move, or replace the block. These actions are filtered based on context.',
    textView: 'Text view',
    textViewText: 'The text view displays the program in JSON format. Some changes can be made directly to the program here.',
    offerSection: 'Offer section',
    offerSectionText: 'Blocks are added to the program by clicking them in the offer section. This section includes a menu that filters available blocks by type.',
    settingsHelp: 'Settings',
    settingsText: 'There is also a button in the menu to open the settings window. In the settings, users can import/export programs, change the editor language, view variables and conditions, and access information about connected devices. Variables and conditions can be edited or deleted. To show the edit and delete buttons, click on the relevant item in the list. Expressions or conditions are created by adding operands, grouping them with the group button, and assigning an operation.',

  },
  cs: {
    Graphical: 'Grafick√Ω',
    Both: 'Oba', 
    Text: 'Text',
    chooseEditor: 'Vyberte editor:',

    settings: 'Nastaven√≠',
    usersFactors: 'U≈æivatelsk√© faktory',
    importJSONfile: 'Import soubor',
    exportJSONfile: 'Export soubor',
    chooseLanguage: 'üåêZvol jazyk:',
    procedures: 'Procedury', 
    variables: 'Promƒõnn√©',
    conditions: 'Podm√≠nky',
    devicesFactors: ' Factory za≈ô√≠zen√≠',
    commands: '‚ö°P≈ô√≠kazy',
    parameters: 'üå°Ô∏èParametry',
    about: 'O projektu',
    help: '? N√°povƒõda',

    save: 'Ulo≈æit',
    back: 'Zpƒõt',
    cancel: 'Zru≈°it',
    edit: 'Upravit',
    delete: 'Smazat',

    listOfVariables: 'Seznam promƒõnn√Ωch',
    type: 'Typ',
    name: 'Jm√©no',
    value: 'Hodnota',
    newVariable: 'Nov√° promƒõnn√°',

    number: 'üî¢ ƒç√≠slo',
    text: 'üî§ text', 
    bool: '‚úÖ bool',
    expr: 'üßÆ v√Ωraz',
    true: 'pravda',
    false: 'nepravda',
    enterNumber: 'Vlo≈æ ƒç√≠slo',
    addVarVal: 'Vlo≈æ hodnotu promƒõnn√© ...',
    selectTypeOfVar: 'Vlo≈æte typ promƒõnn√©: ',
    addVarName: 'Vlo≈æte jm√©no promƒõnn√©...',

    listOfConditions: 'Seznam podm√≠nek',
    newCondition: 'Nov√° podm√≠nka',
    conditionEditor: '‚öñÔ∏èEditor podm√≠nek',
    fillNameOfNewCondition: 'Jm√©no podm√≠nky:',
    addName: 'Vlo≈æte jm√©no ...',
    addFirstVar: 'Vlo≈æte prvn√≠ promƒõnnou, nebo hodnotu',// do sv√© podm√≠nky
    select: 'Vybrat...',
    saveCondition: 'Ulo≈æit podm√≠nku',
    group: 'Seskupit',
    useValue: 'Pou≈æ√≠t hodnotu',
    selectFromExist: 'Vyber jeden z existuj√≠c√≠ch',

    User: 'U≈æivatelsk√©',
    Device: 'Za≈ô√≠zen√≠',
    addVariable: 'P≈ôidat promƒõnnou',
    addValue: 'P≈ôidat hodnotu',

    Compare: 'Porovn√°vac√≠',
    Logical: 'Logick√©',
    Numeric: 'ƒå√≠seln√©',

    insertBlock: 'Vlo≈æte dal≈°√≠ blok ',//sv√©ho programu
    insertFirstBlock: 'Vlo≈æte prvn√≠ blok sv√©ho programu ',
    insertHere: 'Vlo≈æte zde',
    attentionIf: 'Upozornƒõn√≠: V≈°echny (jinak jestli) a (jinak) blocky propojen√© s t√≠mto (pokud) blokem budou tak√© p≈ôesunuty. ',
    attentionIfDelete: 'Upozornƒõn√≠: V≈°echny (jinak jestli) a (jinak) blocky propojen√© s t√≠mto (pokud) blokem budou tak√© smaz√°ny. ',
    invalidAction: 'Chybn√° drag and drop akce. ',
    attentionVar: 'Upozornƒõn√≠: Pokud sma≈æete pou≈æ√≠vanou promƒõnnou, vznikne chyba v programu. ',
    invalidName: 'Promƒõnn√° s t√≠mto jm√©nem ji≈æ existuje. ',
    invalidImport: 'Nelze importovat. Byla nalezena chyba ve vstupn√≠m JSON. ',

    do: 'proveƒè', 
    Repeat: 'Opakuj',
    While: 'Dokud',
    SendNotification: 'Po≈°li zpr√°vu',
    If: 'Pokud',
    Else: 'Jinak',
    Otherwise: 'Nebo jestli',
    SwitchAccording: 'Vyber podle',
    Case: 'Mo≈ænost',
    EndOfBlock: 'Konec bloku',
    SetVariable: 'Nastav promƒõnnou',

    showBlock: 'Zobraz blok',
    hideBlock: 'Skryj blok',
    addArgument: 'P≈ôidej argument: ',
    cond: 'podm. ',
    hide: 'Skryj',
    arguments: 'Argumenty ...',
    replace: 'Nahradit',
    saveAsProcedure: 'Ulo≈æit jako proceduru',
    changeValue: 'Zmƒõn hodnotu:  ',
    useVariable: 'Pou≈æij promƒõnnou: ',
    addVal: 'Vlo≈æ hodnotu',

    branch: 'vƒõtven√≠',
    all: 'v≈°e',
    dev: 'za≈ô√≠zen√≠',
    others: 'jin√©',
    cycle: 'cykly',
    clickCreate: 'Vytvo≈ôen√≠ nov√©ho v√Ωrazu',

    KPI: 'üìä KPI',
    leaking: '√önik detekov√°n',
    turnedOn: 'Zapnut√° za≈ô√≠zen√≠',
    deviceOnline: 'Za≈ô√≠zen√≠ online',
    criticalBatery: 'Kritick√° baterie',
    anomalyDetected: 'Zji≈°tƒõna anom√°lie',
    sensorError: 'Chyba senzoru',
    aboutText: 'Toto je VPL editor pro automatizaci chytr√Ωch za≈ô√≠zen√≠ na mobiln√≠ch telefonech. Byl vyvinut pro projekt Pocketix Davidem ≈†krabalem. Tento editor pou≈æ√≠v√° vizu√°ln√≠ programovac√≠ jazyk zalo≈æen√Ω na bloc√≠ch a formul√°≈ô√≠ch. Pro v√≠ce informac√≠ kliknƒõte ',
    here: 'zde',
    helpText: 'Editor se skl√°d√° ze t≈ô√≠ hlavn√≠ch ƒç√°st√≠: nab√≠dky, samotn√©ho editoru a panelu s nab√≠dkou blok≈Ø. Editor m√° dvƒõ zobrazen√≠: grafick√© a textov√©. Mezi tƒõmito zobrazen√≠mi lze p≈ôep√≠nat pomoc√≠ tlaƒç√≠tka v nab√≠dce.',
    graphicalView: 'Grafick√© zobrazen√≠',
    graphicalViewText: 'Grafick√© zobrazen√≠ obsahuje jednotliv√© programov√© bloky. Bloky lze p≈ôesouvat pomoc√≠ tlaƒç√≠tka pro p≈ôeta≈æen√≠, kter√© je um√≠stƒõno na lev√© stranƒõ ka≈æd√©ho bloku. Na poƒç√≠taƒçi je t≈ôeba na toto tlaƒç√≠tko nejprve kliknout, aby se zobrazila m√≠sta, kam lze blok p≈ôesunout. Podr≈æen√≠m bloku se zobraz√≠ nab√≠dka akc√≠ pro tento blok. Tato nab√≠dka obsahuje mo≈ænosti pro smaz√°n√≠, p≈ôesun nebo nahrazen√≠ bloku. Dostupn√© akce jsou filtrov√°ny podle kontextu.',
    textView: 'Textov√© zobrazen√≠',
    textViewText: 'Textov√© zobrazen√≠ zobrazuje program ve form√°tu JSON. V tomto zobrazen√≠ lze prov√°dƒõt nƒõkter√© √∫pravy programu.',
    offerSection: 'Nab√≠dka blok≈Ø',
    offerSectionText: 'Bloky se do programu p≈ôid√°vaj√≠ kliknut√≠m na nƒõ v nab√≠dce. Tato nab√≠dka obsahuje filtr, kter√Ω zobrazuje bloky podle typu.',
    settingsHelp: 'Nastaven√≠',
    settingsText: 'V nab√≠dce editoru je tak√© tlaƒç√≠tko pro otev≈ôen√≠ okna nastaven√≠. V nastaven√≠ je mo≈æn√© importovat/exportovat program, zmƒõnit jazyk editoru, zobrazit nebo upravit promƒõnn√© a podm√≠nky a z√≠skat informace o p≈ôipojen√Ωch za≈ô√≠zen√≠ch. Promƒõnn√© a podm√≠nky lze upravovat a mazat. Pro zobrazen√≠ tlaƒç√≠tek pro √∫pravu nebo maz√°n√≠ je t≈ôeba kliknout na p≈ô√≠slu≈ænou polo≈æku v seznamu. V√Ωrazy nebo podm√≠nky se vytv√°≈ôej√≠ p≈ôid√°n√≠m operand≈Ø, jejich seskupen√≠m pomoc√≠ tlaƒç√≠tka pro seskupen√≠ a p≈ôi≈ôazen√≠m operace.',
  }
};

export type TranslationKey = keyof typeof translations[LangCode];

export function transl(key: string): string {
  return translations[currentLang]?.[key as keyof typeof translations[typeof currentLang]] ?? key;
}

export function setLang(lang: LangCode) {
  currentLang = lang;
}

export function getLang(): LangCode {
  return currentLang;
}

export function updateTranslations(newData: typeof translations) {
  translations = newData;
}
  